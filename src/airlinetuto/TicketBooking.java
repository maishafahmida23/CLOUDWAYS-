/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package airlinetuto;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import javax.swing.JOptionPane;
import net.proteanit.sql.DbUtils;

/**
 *
 * @author lenovo
 */
public class TicketBooking extends javax.swing.JFrame {

    /**
     * Creates new form TicketBooking
     */
    public TicketBooking() {
        initComponents();
        GetPassenger();
        nationality.setEditable(false);
        passengername.setEditable(false);
        passportnumber.setEditable(false);
        GetFlights();
        DisplayBooking();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        passportnumber = new javax.swing.JTextField();
        nationality = new javax.swing.JComboBox<>();
        amount = new javax.swing.JTextField();
        seattype = new javax.swing.JComboBox<>();
        jScrollPane1 = new javax.swing.JScrollPane();
        BookingTable = new javax.swing.JTable();
        book = new javax.swing.JButton();
        reset = new javax.swing.JButton();
        back = new javax.swing.JLabel();
        passengerId = new javax.swing.JComboBox<>();
        flightCode = new javax.swing.JComboBox<>();
        passengername = new javax.swing.JTextField();
        seatno = new javax.swing.JTextField();
        bg = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("CloudWays");
        setResizable(false);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        passportnumber.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        passportnumber.setForeground(new java.awt.Color(0, 0, 102));
        getContentPane().add(passportnumber, new org.netbeans.lib.awtextra.AbsoluteConstraints(810, 260, 180, 30));

        nationality.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        nationality.setForeground(new java.awt.Color(0, 0, 102));
        nationality.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Bangladeshi", "Italian", "Canadian", "Europian", "Australian", "American", "Indian", " " }));
        nationality.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nationalityActionPerformed(evt);
            }
        });
        getContentPane().add(nationality, new org.netbeans.lib.awtextra.AbsoluteConstraints(1120, 260, 120, 30));

        amount.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        amount.setForeground(new java.awt.Color(0, 0, 102));
        getContentPane().add(amount, new org.netbeans.lib.awtextra.AbsoluteConstraints(1010, 260, 90, 30));

        seattype.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        seattype.setForeground(new java.awt.Color(0, 0, 102));
        seattype.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Window seat", "Front Seat", "Back seat", "Middle row", " ", " " }));
        seattype.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                seattypeActionPerformed(evt);
            }
        });
        getContentPane().add(seattype, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 260, 120, 30));

        BookingTable.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        BookingTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        BookingTable.setRowHeight(25);
        BookingTable.setSelectionBackground(new java.awt.Color(102, 204, 255));
        jScrollPane1.setViewportView(BookingTable);

        getContentPane().add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 400, 1140, 330));

        book.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        book.setForeground(new java.awt.Color(0, 0, 102));
        book.setText("Book");
        book.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                bookMouseClicked(evt);
            }
        });
        book.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bookActionPerformed(evt);
            }
        });
        getContentPane().add(book, new org.netbeans.lib.awtextra.AbsoluteConstraints(560, 330, 100, 40));

        reset.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        reset.setForeground(new java.awt.Color(0, 0, 102));
        reset.setText("Reset");
        reset.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                resetMouseClicked(evt);
            }
        });
        reset.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                resetActionPerformed(evt);
            }
        });
        getContentPane().add(reset, new org.netbeans.lib.awtextra.AbsoluteConstraints(710, 330, 100, 40));

        back.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                backMouseClicked(evt);
            }
        });
        getContentPane().add(back, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 690, 70, 60));

        passengerId.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        passengerId.setForeground(new java.awt.Color(0, 0, 102));
        passengerId.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                passengerIdMouseClicked(evt);
            }
        });
        passengerId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengerIdActionPerformed(evt);
            }
        });
        getContentPane().add(passengerId, new org.netbeans.lib.awtextra.AbsoluteConstraints(70, 260, 130, 30));

        flightCode.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        flightCode.setForeground(new java.awt.Color(0, 0, 102));
        flightCode.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                flightCodeMouseClicked(evt);
            }
        });
        flightCode.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                flightCodeActionPerformed(evt);
            }
        });
        getContentPane().add(flightCode, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 260, 120, 30));

        passengername.setFont(new java.awt.Font("Gabriola", 0, 24)); // NOI18N
        passengername.setForeground(new java.awt.Color(0, 0, 102));
        passengername.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                passengernameActionPerformed(evt);
            }
        });
        getContentPane().add(passengername, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 260, 170, 30));
        getContentPane().add(seatno, new org.netbeans.lib.awtextra.AbsoluteConstraints(700, 260, 90, 30));

        bg.setIcon(new javax.swing.ImageIcon("E:\\3.2\\lab\\isd\\project image\\ticketbooking.jpg")); // NOI18N
        bg.setText("jLabel1");
        bg.setMaximumSize(new java.awt.Dimension(1300, 760));
        bg.setPreferredSize(new java.awt.Dimension(1300, 760));
        getContentPane().add(bg, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 1300, 760));

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void nationalityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nationalityActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nationalityActionPerformed

    private void seattypeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_seattypeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_seattypeActionPerformed

    Connection Con = null;
    PreparedStatement pst = null;
    ResultSet Rs = null, Rs1 = null;
    Statement St = null, St1 = null;
    ResultSet Rs2 = null, Rs3 = null;
    Statement St2 = null, St3 = null;
    
    private void bookMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_bookMouseClicked
        // TODO add your handling code here:

        String query2 = "SELECT * FROM BookingsTbl WHERE SeatNo ='" + seatno.getText().toString() + "'";
        System.out.println(query2);
        
        Statement st;
        ResultSet rs;

        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
            St2 = Con.createStatement();
            Rs2 = St2.executeQuery(query2);
            if (Rs2.next()) {
                   JOptionPane.showMessageDialog(this, "Duplicate seat detected!!");
                   return ;
            }
            else 
            {
                
                
             
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, "Duplicate seat detected!!");
            return ;
        }
        
        
        if (passengerId.getSelectedIndex() == -1 || flightCode.getSelectedIndex() == -1 || seattype.getSelectedIndex() == -1 || seatno.getText().isEmpty() || amount.getText().isEmpty()) {
            JOptionPane.showMessageDialog(this, "Missing Information");
        } else {
            try {
                CountFlights();
                Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
                PreparedStatement Add = Con.prepareStatement("insert into BookingsTbl values(?,?,?,?,?,?,?,?)");
                Add.setInt(1, TId);
                Add.setString(2, passengername.getText());
                Add.setString(3, flightCode.getSelectedItem().toString());
                Add.setString(4, seattype.getSelectedItem().toString());
                Add.setString(5, seatno.getText());
                Add.setString(6, passportnumber.getText());
                Add.setInt(7, Integer.valueOf(amount.getText()));
                Add.setString(8, nationality.getSelectedItem().toString());

                int row = Add.executeUpdate();
                JOptionPane.showMessageDialog(this, "Ticket Added");
                Con.close();
                DisplayBooking();
                Clear();

            } catch (Exception e) {

                JOptionPane.showMessageDialog(this, e);

            }
        }

    }//GEN-LAST:event_bookMouseClicked

    private void bookActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bookActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_bookActionPerformed

    private void resetMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_resetMouseClicked
        // TODO add your handling code here:

        Clear();

    }//GEN-LAST:event_resetMouseClicked

    private void resetActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_resetActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_resetActionPerformed

    private void backMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_backMouseClicked
        new MainForm().setVisible(true);
        this.dispose();// TODO add your handling code here:
    }//GEN-LAST:event_backMouseClicked

    private void passengerIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengerIdActionPerformed
        GetPassengerData();        // TODO add your handling code here:
    }//GEN-LAST:event_passengerIdActionPerformed

    private void passengerIdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_passengerIdMouseClicked
      //GetPassengerData();  // TODO add your handling code here:
    }//GEN-LAST:event_passengerIdMouseClicked

    private void passengernameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_passengernameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_passengernameActionPerformed

    private void flightCodeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_flightCodeActionPerformed
      // TODO add your handling code here:
    }//GEN-LAST:event_flightCodeActionPerformed

    private void flightCodeMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_flightCodeMouseClicked
        // TODO add your handling code here:
    }//GEN-LAST:event_flightCodeMouseClicked
    

    private void GetPassenger() {
      //  System.out.println("get passenger ");

        try {

            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
            St = Con.createStatement();
            String Query = "select * from passengerstbl";
            Rs = St.executeQuery(Query);
            while (Rs.next()) {
                int pId = Rs.getInt("PId");
                passengerId.addItem(String.valueOf(pId));
                //String pId = String.valueOf(Rs.getInt("PId"));
                //passengerId.addItem(pId);

            }

        } catch (Exception e) {
            e.printStackTrace();
            // Add a message dialog to show the error
            JOptionPane.showMessageDialog(this, "Error fetching passenger data: " + e.getMessage(), "Error", JOptionPane.ERROR_MESSAGE);
        }

    }

    private void GetFlights() {

        try {

            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
            St = Con.createStatement();
            String Query = "select * from FlightTbl";
            Rs = St.executeQuery(Query);
            while (Rs.next()) {

                String FCode = Rs.getString("FICode");
                flightCode.addItem(FCode);

            }

        } catch (Exception e) {

        }

    }
    int tmp = 0;

    private void GetPassengerData() {
        if(tmp == 0 )
        {
            tmp ++;
            return ;
        }
        
     //   System.out.println(passengerId.getSelectedItem().toString());
        String query = "SELECT * FROM PassengersTbl WHERE PId =" + passengerId.getSelectedItem().toString();
        
        Statement st;
        ResultSet rs;

        try {
            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
            St = Con.createStatement();
            Rs = St.executeQuery(query);

            if (Rs.next()) {
                passengername.setText(Rs.getString("PName"));
                passportnumber.setText(Rs.getString("Ppass"));
                nationality.setSelectedItem(Rs.getString("PNat"));

            }

        } catch (Exception e) {

        }
   
    }

    private void DisplayBooking() {
        try {

            Con = DriverManager.getConnection("jdbc:mysql://localhost:3306/airlinedb", "root", "");
            St = Con.createStatement();
            Rs = St.executeQuery("select * from BookingsTbl");
            BookingTable.setModel(DbUtils.resultSetToTableModel(Rs));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(this, e);
        }
    }

    int TId = 0;

    private void CountFlights() {

        try {

            St1 = Con.createStatement();
            Rs1 = St1.executeQuery("select Max(TicketId) from BookingTbl");
            Rs1.next();
            TId = Rs1.getInt(1) + 1;

        } catch (Exception e) {

        }

    }

    private void Clear() {
        flightCode.setSelectedIndex(-1);
        // PassIdCb.setSelectedIndex(-1);
        passengername.setText("");
        passportnumber.setText("");
        nationality.setSelectedIndex(-1);
        seattype.setSelectedIndex(-1);
        seatno.setText("");
        amount.setText("");
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TicketBooking.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TicketBooking().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable BookingTable;
    private javax.swing.JTextField amount;
    private javax.swing.JLabel back;
    private javax.swing.JLabel bg;
    private javax.swing.JButton book;
    private javax.swing.JComboBox<String> flightCode;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JComboBox<String> nationality;
    private javax.swing.JComboBox<String> passengerId;
    private javax.swing.JTextField passengername;
    private javax.swing.JTextField passportnumber;
    private javax.swing.JButton reset;
    private javax.swing.JTextField seatno;
    private javax.swing.JComboBox<String> seattype;
    // End of variables declaration//GEN-END:variables
}
